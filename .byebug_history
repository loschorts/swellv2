c
res.to_h["weather"]
res.to_h
res
quit
38 * 10
162 - 124
Spot.count
to_fetch.count
quit
y
qui
quit
display list
display lis
list
quit
Spot.count
to_fetch.count
c
:q
res
quit
res
c
Figaro.env.cloudinary_api_secret
Figaro.env.cloudinary_api_key
Figaro.env.cloudinary_cloud_name
quit
already_have.to_a
to_fetch
c
quit
already_have.length
to_fetch.length
to_fetch
quit
images
c
images
res.to_query
res.query
images
quit
:q
res.to_h["resources"].map {|x| x["public_id"]}
res.to_h["resources"]
res.to_h["resources"
res["next_cursor"]
res[:next_cursor]
res.to_h.keys
res.to_h
res.to_json.keys
res.to_json
res.body
quit
res.to_json
res.to_h
res.methods
res
quit
scraper.public_methods
scraper.methods
scraper
c
cfvs.to_json
fvs.to_json
fvs[0].class
fvs[0]
fvs
fvs = @favorites.map(&:spot_id)
f
f = @favorites.map(&:spot_id)
f = _
@favorites.map(&:spot_id)
@favorites
quit
params[:id].class
parms[:id].class
Spot.find(params[:id])
params[:id]
quit
User.find(2)
User.find(2).reset_session_token!
User.find(2)
reload!
User.find(2)
reload!
User.find(2)
User.find(2).reset_session_token!
User.find(2)
User.find(2).reset_session_token!
User.find(2)
User.all
User.find(3).destroy
User.all
session[:session_token]
current_user
@user
quit
uit
self.user_params
user_params
quit
self.user_params
self.class
self
params[:id]
user_params
